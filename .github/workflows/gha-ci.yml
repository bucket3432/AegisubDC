name: GitHubActions CI tests

on:
  push:
    branches: [master, dev, ci]
  pull_request:

jobs:
  build-nix:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        build_suite: [autoconf]
        with_coveralls: [no]
        include:
          # Do one build with cmake instead of autoconf
          - os: ubuntu-20.04
            build_suite: cmake
            with_coveralls: no
          # And run one build with gcov and coveralls
          # (Does currently not work, but neither did it in travis)
          #- os: ubuntu-20.04
          #  build_suite: autoconf
          #  with_coveralls: yes
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install deps
        run: |
          if (echo "${{ matrix.os }}" | grep -qE '^macos-') ; then
            #brew update
            # freetype, gettext, icuc4 and autoconf are preinstalled
            # and `brew install` fails if a non-uptodate version is already installed
            #brew upgrade autoconf freetype gettext icu4c
            brew install automake boost ffmpeg ffms2 fftw fribidi libass \
                         lua luarocks m4 wxmac hunspell uchardet
            # Use bundled googletest
            git submodule --quiet init
            git submodule --quiet update vendor/googletest
          else
            #sudo apt-get update && sudo apt-get upgrade -y
            sudo apt-get install -y ${{ matrix.build_suite }} \
              autopoint build-essential g++ gcc gettext libasound2-dev \
              libass-dev  libffms2-dev libfftw3-dev libfontconfig1-dev   \
              libfribidi-dev libgtest-dev libhunspell-dev libicu-dev libopenal-dev       \
              libpulse-dev libuchardet-dev libwxgtk3.0-gtk3-dev luarocks portaudio19-dev \
              python3-pip python3-setuptools \
              pkg-config libgl1-mesa-dev libgl-dev libfreetype6-dev libfontconfig-dev \
              intltool libboost-all-dev googletest
            if [ "x${{ matrix.with_coveralls }}" = "xyes" ] ; then
              sudo pip3 install -U cpp-coveralls
            fi
            if [ "x${{ matrix.build_suite }}" = "xautoconf" ] ; then
              # Use system provided googletest via source
              # (CMake will precompile it and use the binaries)
              rm -fr vendor/googletest
              cp -R /usr/src/googletest/googletest vendor/
            fi
          fi

          sudo luarocks install busted     > /dev/null
          sudo luarocks install moonscript > /dev/null
          sudo luarocks install uuid       > /dev/null

      - name: set up MacOS env
        run: |
          if (echo "${{ matrix.os }}" | grep -qE '^macos-') ; then
            # Changes are only available in the following steps, not the current one
            echo 'CPPFLAGS=-I/usr/local/opt/gettext/include -I/usr/local/opt/icu4c/include' >> $GITHUB_ENV
            echo 'LDFLAGS=-L/usr/local/opt/gettext/lib -L/usr/local/opt/icu4c/lib' >> $GITHUB_ENV
            echo 'PKG_CONFIG_PATH=/usr/local/opt/icu4c/lib/pkgconfig' >> $GITHUB_ENV
            echo 'ACLOCAL_PATH=/usr/local/opt/gettext/share/aclocal'  >> $GITHUB_ENV
            # Prepend to $PATH
            echo "/usr/local/opt/icu4c/bin"   >> $GITHUB_PATH
            echo "/usr/local/opt/icu4c/sbin"  >> $GITHUB_PATH
            echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
          fi

      - name: set up coverage env
        run: |
          if [ "x${{ matrix.with_coveralls }}" = "xyes" ] ; then
            echo "CPPFLAGS=--coverage $CPPFLAGS" >> $GITHUB_ENV
            echo "LIBS=-lgcov $LIBS" >> $GITHUB_ENV
          fi

      - name: configure
        run: |
          if [ "x${{ matrix.build_suite }}" = "xautoconf" ] ; then
            ./autogen.sh
            conf_success=0
            ./configure --enable-debug || conf_success=1
            [ "$conf_success" -eq 0 ] || (cat config.log; exit 1)
          else
            mkdir build-dir
            cd build-dir
            cmake -DCMAKE_CXX_FLAGS='-Wall -Wextra -Wno-unused-parameter -pedantic' -DCMAKE_C_FLAGS='-Wall -Wextra -Wno-unused-parameter' -DWITH_STARTUPLOG=ON -DWITH_TEST=ON  ..
          fi

      - name: build
        run: |
          [ "x${{ matrix.build_suite }}" = "xautoconf" ] || cd build-dir
          make -j 2

      - name: run tests
        run: |
          [ "x${{ matrix.build_suite }}" = "xautoconf" ] || cd build-dir
          make test

      - name: coveralls
        run: |
          if [ "x${{ matrix.with_coveralls }}" = "xyes" ] ; then
            coveralls --exclude vendor --exclude src --exclude build \
                      --exclude tools --exclude libaegisub/windows \
                      > /dev/null
          fi

  build-win:
    runs-on: windows-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: cache vcpkg packages
      uses: actions/cache@v2
      with:
        path: C:\vcpkg\installed
        key: vcpkg-installed-x64-windows

    - name: install deps
      run: |
        Invoke-WebRequest -Uri https://github.com/AviSynth/AviSynthPlus/archive/v3.6.1.zip -OutFile vendor/AviSynthPlus.zip
        Invoke-WebRequest -Uri https://github.com/AviSynth/AviSynthPlus/releases/download/v3.6.1/AviSynthPlus_3.6.1_20200619-filesonly.7z -OutFile vendor/AviSynthPlus_3.6.1_20200619-filesonly.7z
        Invoke-WebRequest -Uri https://github.com/FFMS/ffms2/releases/download/2.23/ffms2-2.23.1-msvc.7z -OutFile vendor/ffms2-2.23.1-msvc.7z
        Invoke-WebRequest -Uri https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.4/wxWidgets-3.1.4-headers.7z -OutFile vendor/wxWidgets-3.1.4-headers.7z
        Invoke-WebRequest -Uri https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.4/wxMSW-3.1.4_vc14x_x64_Dev.7z -OutFile vendor/wxMSW-3.1.4_vc14x_x64_Dev.7z
        Invoke-WebRequest -Uri https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.4/wxMSW-3.1.4_vc14x_x64_ReleaseDLL.7z -OutFile vendor/wxMSW-3.1.4_vc14x_x64_ReleaseDLL.7z
        Invoke-WebRequest -Uri https://globalcdn.nuget.org/packages/microsoft.xaudio2.redist.1.2.4.nupkg -OutFile vendor/microsoft.xaudio2.redist.1.2.4.nupkg

        7z.exe x vendor/AviSynthPlus.zip -ovendor/avisynth
        7z.exe x vendor/AviSynthPlus_3.6.1_20200619-filesonly.7z -ovendor/avisynth
        7z.exe x vendor/ffms2-2.23.1-msvc.7z -ovendor/ffms2
        7z.exe x vendor/wxWidgets-3.1.4-headers.7z -ovendor/wxwidgets
        7z.exe x vendor/wxMSW-3.1.4_vc14x_x64_Dev.7z -ovendor/wxwidgets
        7z.exe x vendor/wxMSW-3.1.4_vc14x_x64_ReleaseDLL.7z -ovendor/wxwidgets
        7z.exe x vendor/microsoft.xaudio2.redist.1.2.4.nupkg -ovendor/xaudio2

        vcpkg.exe install --triplet x64-windows boost-asio boost-container boost-crc boost-filesystem boost-flyweight boost-gil boost-interprocess 'boost-locale[icu]' 'boost-regex[icu]' boost-scope-exit boost-thread fftw3 hunspell icu libass libiconv uchardet gtest
        Remove-Item –Path C:\vcpkg\installed\x64-windows\debug –Recurse -ErrorAction SilentlyContinue

    - name: configure
      run: |
        bash.exe build/version.sh .
        New-Item -Path build-dir -ItemType directory
        Set-Location build-dir
        cmake.exe '-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake' '-DAviSynth_INCLUDE_DIRS=../vendor/avisynth/AviSynthPlus-3.6.1/avs_core/include' '-DAviSynth_SHARED_LIBRARY=../vendor/AviSynthPlus_3.6.1_20200619-filesonly/x64/AviSynth.dll' '-DFFMS2_INCLUDE_DIRS=../vendor/ffms2/ffms2-2.23.1-msvc/include' '-DFFMS2_LIBRARIES=../vendor/ffms2/ffms2-2.23.1-msvc/x64/ffms2.lib' '-DwxWidgets_ROOT_DIR=../vendor/wxwidgets' '-DXAUDIO2_REDIST=ON' '-DXAudio2redist_INCLUDE_DIRS=../vendor/xaudio2/build/native/include' '-DXAudio2redist_LIBRARIES=../vendor/xaudio2/build/native/release/lib/x64/xaudio2_9redist.lib' '-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /DUNICODE /D_UNICODE /MP' '-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /DUNICODE /D_UNICODE /MP' '-DWITH_TEST=ON' ..

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: build
      run: |
        Set-Location build-dir
        MSBuild.exe Aegisub.vcxproj -p:Configuration=Release

    - name: run tests
      run: |
        Set-Location build-dir
        MSBuild.exe test.vcxproj -p:Configuration=Release
